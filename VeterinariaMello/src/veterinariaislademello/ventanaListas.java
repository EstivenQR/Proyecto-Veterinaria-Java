/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package veterinariaislademello;

import DBCon.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;

/**
 *
 * @author Andres Ortega
 */
public class ventanaListas extends javax.swing.JFrame {

    DefaultTableModel modelo;

    public ventanaListas() {
        initComponents();
        modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Edad");
        modelo.addColumn("Especie");
        modelo.addColumn("Raza");
        modelo.addColumn("Tamano");
        modelo.addColumn("Fecha de Nacimiento");
        modelo.addColumn("Ultima Visita");
        modelo.addColumn("Observaciones");
        this.tablaInformacion.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnTodos = new javax.swing.JButton();
        btnGatos = new javax.swing.JButton();
        btnPerros = new javax.swing.JButton();
        btnPeces = new javax.swing.JButton();
        btnAves = new javax.swing.JButton();
        btnOtros = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInformacion = new javax.swing.JTable();

        setTitle("Mascotas");

        btnTodos.setText("Todos");
        btnTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodosActionPerformed(evt);
            }
        });

        btnGatos.setText("Gatos");
        btnGatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGatosActionPerformed(evt);
            }
        });

        btnPerros.setText("Perros");
        btnPerros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerrosActionPerformed(evt);
            }
        });

        btnPeces.setText("Peces");
        btnPeces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPecesActionPerformed(evt);
            }
        });

        btnAves.setText("Aves");
        btnAves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvesActionPerformed(evt);
            }
        });

        btnOtros.setText("Otros");
        btnOtros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtrosActionPerformed(evt);
            }
        });

        jButton1.setText("Atendidos Hoy");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/data-table.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTodos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPerros, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGatos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAves, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPeces, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOtros, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(btnTodos)
                .addGap(18, 18, 18)
                .addComponent(btnPerros)
                .addGap(18, 18, 18)
                .addComponent(btnGatos)
                .addGap(18, 18, 18)
                .addComponent(btnPeces)
                .addGap(18, 18, 18)
                .addComponent(btnAves)
                .addGap(18, 18, 18)
                .addComponent(btnOtros)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );

        tablaInformacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Edad", "Especie", "Raza", "Tamano", "Fecha de Nacimiento", "Ultima Cita", "Observaciones"
            }
        ));
        jScrollPane1.setViewportView(tablaInformacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPerrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerrosActionPerformed
        try {

            modelo.setRowCount(0);

            Connection con = Conexion.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM mascotas WHERE especie = 'perro';");
            ResultSet res = ps.executeQuery();

            while (res.next()) {
                String[] info = new String[10];

                info[0] = res.getString("id");
                info[1] = res.getString("nombre");
                info[2] = res.getString("edad");
                info[3] = res.getString("especie");
                info[4] = res.getString("raza");
                info[5] = res.getString("tamano");
                info[6] = res.getString("fechaNacimiento");
                modelo.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnPerrosActionPerformed

    private void btnAvesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvesActionPerformed
        try {

            modelo.setRowCount(0);

            Connection con = Conexion.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM mascotas WHERE especie = 'ave';");
            ResultSet res = ps.executeQuery();

            while (res.next()) {
                String[] info = new String[10];

                info[0] = res.getString("id");
                info[1] = res.getString("nombre");
                info[2] = res.getString("edad");
                info[3] = res.getString("especie");
                info[4] = res.getString("raza");
                info[5] = res.getString("tamano");
                info[6] = res.getString("fechaNacimiento");
                info[7] = res.getString("fechaVisita");
                info[8] = res.getString("comentarios");
                modelo.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnAvesActionPerformed

    private void btnTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodosActionPerformed
        try {

            modelo.setRowCount(0);

            Connection con = Conexion.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM mascotas");
            ResultSet res = ps.executeQuery();

            while (res.next()) {
                String[] info = new String[10];

                info[0] = res.getString("id");
                info[1] = res.getString("nombre");
                info[2] = res.getString("edad");
                info[3] = res.getString("especie");
                info[4] = res.getString("raza");
                info[5] = res.getString("tamano");
                info[6] = res.getString("fechaNacimiento");
                info[7] = res.getString("fechaVisita");
                info[8] = res.getString("comentarios");
                modelo.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnTodosActionPerformed

    private void btnGatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGatosActionPerformed
        try {

            modelo.setRowCount(0);

            Connection con = Conexion.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM mascotas WHERE especie = 'gato';");
            ResultSet res = ps.executeQuery();

            while (res.next()) {
                String[] info = new String[10];

                info[0] = res.getString("id");
                info[1] = res.getString("nombre");
                info[2] = res.getString("edad");
                info[3] = res.getString("especie");
                info[4] = res.getString("raza");
                info[5] = res.getString("tamano");
                info[6] = res.getString("fechaNacimiento");
                info[7] = res.getString("fechaVisita");
                info[8] = res.getString("comentarios");
                modelo.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnGatosActionPerformed

    private void btnPecesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPecesActionPerformed
        try {

            modelo.setRowCount(0);

            Connection con = Conexion.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM mascotas WHERE especie = 'pez';");
            ResultSet res = ps.executeQuery();

            while (res.next()) {
                String[] info = new String[10];

                info[0] = res.getString("id");
                info[1] = res.getString("nombre");
                info[2] = res.getString("edad");
                info[3] = res.getString("especie");
                info[4] = res.getString("raza");
                info[5] = res.getString("tamano");
                info[6] = res.getString("fechaNacimiento");
                info[7] = res.getString("fechaVisita");
                info[8] = res.getString("comentarios");
                modelo.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnPecesActionPerformed

    private void btnOtrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtrosActionPerformed
        try {

            modelo.setRowCount(0);

            Connection con = Conexion.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM mascotas WHERE especie = 'otro';");
            ResultSet res = ps.executeQuery();

            while (res.next()) {
                String[] info = new String[10];

                info[0] = res.getString("id");
                info[1] = res.getString("nombre");
                info[2] = res.getString("edad");
                info[3] = res.getString("especie");
                info[4] = res.getString("raza");
                info[5] = res.getString("tamano");
                info[6] = res.getString("fechaNacimiento");
                info[7] = res.getString("fechaVisita");
                info[8] = res.getString("comentarios");
                modelo.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnOtrosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            modelo.setRowCount(0);

            Connection con = Conexion.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM mascotas WHERE fechaVisita = '" + LocalDate.now().toString() + "';");
            ResultSet res = ps.executeQuery();

            while (res.next()) {
                String[] info = new String[10];

                info[0] = res.getString("id");
                info[1] = res.getString("nombre");
                info[2] = res.getString("edad");
                info[3] = res.getString("especie");
                info[4] = res.getString("raza");
                info[5] = res.getString("tamano");
                info[6] = res.getString("fechaNacimiento");
                info[7] = res.getString("fechaVisita");
                info[8] = res.getString("comentarios");
                modelo.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaListas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAves;
    private javax.swing.JButton btnGatos;
    private javax.swing.JButton btnOtros;
    private javax.swing.JButton btnPeces;
    private javax.swing.JButton btnPerros;
    private javax.swing.JButton btnTodos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaInformacion;
    // End of variables declaration//GEN-END:variables
}
